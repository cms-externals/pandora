--------------------------------------------------------------------------------------------------------------------------------------------
TAG v00-17
--------------------------------------------------------------------------------------------------------------------------------------------
Overhaul, with emphasis on ensuring that client applications can instantiate and use multiple concurrent pandora instances.
Add GeometryManager and upgrade PluginManager to deal with plugins for particle id, energy corrections, shower profile calculations, pseudo-layer calculations and B-Field maps.
Add Pandora process class: Algorithms, AlgorithmTools and all Plugins are Pandora processes, which know with which Pandora instance they are associated.
Move some Helper classes into LCContent. No Helper classes (and indeed no Pandora classes) have any configurable static member variables.
Address issues highlighted by Coverity.
Tweak InputType enums and InputObject parameters classes.
Check parent and daughter addresses are dissimilar before creating a parent-daughter pfo hierarchy.
Alter compiler warning flags, including all, extra, pedantic and shadow declarations to Makefile. Report warnings as errors.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v00-16
--------------------------------------------------------------------------------------------------------------------------------------------
Overhaul object creation from within Pandora algorithms.
Algorithms are now able to add lists of calo hits to a cluster with a single API call.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v00-15
--------------------------------------------------------------------------------------------------------------------------------------------
Major upgrade of PandoraContentApi, with templates removing need for separate accessors for each object type.
Add Pandora Vertex class and its AlgorithmObject Manager and associated APIs.
The ifndef statements in header files are now fully qualified.
Add single hit type clustering mode functionality.
Modify rules for removing last calo hit from a cluster.
Modify error-checking upon addition of reconstruction objects to a pfo.
Remove unused CaloHit variables and associated Helper functions.
Rename HitType entries VIEW_U->TPC_VIEW_U, etc. and add new HitType TPC_3D.
Improve inner workings of OrderedCaloHitList.
Allow Client Apps to avoid registering GeometryParameters.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v00-14
--------------------------------------------------------------------------------------------------------------------------------------------
Add algorithm tool functionality.
Add vertex to ParticleFlowObject class.
Add ability to make pfo parent-daughter associations.
Add ability to create pfos containing no clusters or tracks, but which can hold metadata and daughter pfos.
XmlHelper algorithm and tool creation improvements.
Changes for clang build on Mavericks.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v00-13
--------------------------------------------------------------------------------------------------------------------------------------------
Upgrade handling of relationships between mc particles and calohits/tracks.
Instead of associating the single mc particle representing the largest energy contribution, client applications can now provide the relationships as a series of weighted contributions.
Calohits and tracks now hold a map of mc particles to weights (typically energy contribution). Previous functionality is restored if an algorithm uses the GetMainMCParticle methods.
Add UseSingleMCParticleAssociation configuration option, so that, for every calohit/track, MCManager only keeps track of the mc particle association with the largest weight.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v00-12
--------------------------------------------------------------------------------------------------------------------------------------------
Updated Pandora persistency, with separate binary and xml file writers and readers.
Relaxed restriction on merging a cluster with a parent cluster that happens to already be part of a PFO.
Provided opportunity to receive address of newly-constructed PFOs in algorithms.
Ensured local include directory is first in include path.

--------------------------------------------------------------------------------------------------------------------------------------------
TAG v00-11
--------------------------------------------------------------------------------------------------------------------------------------------
RESTRUCTURING
Up to v00-11, the PandoraSDK was the core part of the PandoraPFANew parent package.
PandoraPFANew is now a "metadata" package containing only Makefiles for downloading and building relevant Pandora libraries.
The PandoraSDK is now maintained and released separately.

--------------------------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------------------------------
GENERAL INFO:
Pandora consists of the PandoraSDK (Software Development Kit), which comprises a single library and header files with flexible APIs.
There is also an optional PandoraMonitoring library, which contains event display and tree/histogram-writing functionality.
The PandoraMonitoring library depends on the PandoraSDK and ROOT.
Pandora algorithms will necessarily depend upon the PandoraSDK (and also PandoraMonitoring, if desired).
The algorithms can be built as part of a Pandora client application, such as MarlinPandora, or the standalone TestPandora binary.
Algorithms declared to be suitably generic may be designed for use by multiple client applications.
Such re-usable algorithms are best bundled together into a Pandora "content" library.
Algorithms are always registered via the client application, using the PandoraAPIs, but the client app can link against as many content libraries as required.
--------------------------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------------------------------
